{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/DetailsMetrics.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport MetricsService from '../services/MetricsService';\nimport { ResponsiveLine } from '@nivo/line';\n\nclass DetailsMetrics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      metricsInfo: []\n    };\n    this.service = new MetricsService();\n  }\n\n  componentDidMount() {\n    this.service.getAllMetrics(this.props.loggedInUser._id) //=> LLAMADA A MI API PARA DEVOLVER TODOS LOS EJERCICIOS DEL USUARIO ACTIVO\n    .then(data => {\n      return data.json();\n    }).then(dataJSON => {\n      this.setState({\n        metricsInfo: dataJSON.results\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  renderChart() {\n    const data = [{\n      \"id\": \"japan\",\n      \"color\": \"hsl(40, 70%, 50%)\",\n      \"data\": [{\n        \"x\": \"plane\",\n        \"y\": 46\n      }, {\n        \"x\": \"helicopter\",\n        \"y\": 216\n      }, {\n        \"x\": \"boat\",\n        \"y\": 33\n      }, {\n        \"x\": \"train\",\n        \"y\": 152\n      }, {\n        \"x\": \"subway\",\n        \"y\": 74\n      }, {\n        \"x\": \"bus\",\n        \"y\": 274\n      }, {\n        \"x\": \"car\",\n        \"y\": 196\n      }, {\n        \"x\": \"moto\",\n        \"y\": 60\n      }, {\n        \"x\": \"bicycle\",\n        \"y\": 2\n      }, {\n        \"x\": \"horse\",\n        \"y\": 64\n      }, {\n        \"x\": \"skateboard\",\n        \"y\": 295\n      }, {\n        \"x\": \"others\",\n        \"y\": 78\n      }]\n    }, {\n      \"id\": \"france\",\n      \"color\": \"hsl(56, 70%, 50%)\",\n      \"data\": [{\n        \"x\": \"plane\",\n        \"y\": 251\n      }, {\n        \"x\": \"helicopter\",\n        \"y\": 210\n      }, {\n        \"x\": \"boat\",\n        \"y\": 23\n      }, {\n        \"x\": \"train\",\n        \"y\": 190\n      }, {\n        \"x\": \"subway\",\n        \"y\": 96\n      }, {\n        \"x\": \"bus\",\n        \"y\": 27\n      }, {\n        \"x\": \"car\",\n        \"y\": 87\n      }, {\n        \"x\": \"moto\",\n        \"y\": 258\n      }, {\n        \"x\": \"bicycle\",\n        \"y\": 158\n      }, {\n        \"x\": \"horse\",\n        \"y\": 66\n      }, {\n        \"x\": \"skateboard\",\n        \"y\": 42\n      }, {\n        \"x\": \"others\",\n        \"y\": 266\n      }]\n    }, {\n      \"id\": \"us\",\n      \"color\": \"hsl(73, 70%, 50%)\",\n      \"data\": [{\n        \"x\": \"plane\",\n        \"y\": 161\n      }, {\n        \"x\": \"helicopter\",\n        \"y\": 116\n      }, {\n        \"x\": \"boat\",\n        \"y\": 95\n      }, {\n        \"x\": \"train\",\n        \"y\": 41\n      }, {\n        \"x\": \"subway\",\n        \"y\": 20\n      }, {\n        \"x\": \"bus\",\n        \"y\": 26\n      }, {\n        \"x\": \"car\",\n        \"y\": 46\n      }, {\n        \"x\": \"moto\",\n        \"y\": 15\n      }, {\n        \"x\": \"bicycle\",\n        \"y\": 67\n      }, {\n        \"x\": \"horse\",\n        \"y\": 76\n      }, {\n        \"x\": \"skateboard\",\n        \"y\": 158\n      }, {\n        \"x\": \"others\",\n        \"y\": 272\n      }]\n    }, {\n      \"id\": \"germany\",\n      \"color\": \"hsl(185, 70%, 50%)\",\n      \"data\": [{\n        \"x\": \"plane\",\n        \"y\": 149\n      }, {\n        \"x\": \"helicopter\",\n        \"y\": 132\n      }, {\n        \"x\": \"boat\",\n        \"y\": 13\n      }, {\n        \"x\": \"train\",\n        \"y\": 165\n      }, {\n        \"x\": \"subway\",\n        \"y\": 44\n      }, {\n        \"x\": \"bus\",\n        \"y\": 49\n      }, {\n        \"x\": \"car\",\n        \"y\": 156\n      }, {\n        \"x\": \"moto\",\n        \"y\": 124\n      }, {\n        \"x\": \"bicycle\",\n        \"y\": 125\n      }, {\n        \"x\": \"horse\",\n        \"y\": 57\n      }, {\n        \"x\": \"skateboard\",\n        \"y\": 75\n      }, {\n        \"x\": \"others\",\n        \"y\": 281\n      }]\n    }, {\n      \"id\": \"norway\",\n      \"color\": \"hsl(127, 70%, 50%)\",\n      \"data\": [{\n        \"x\": \"plane\",\n        \"y\": 254\n      }, {\n        \"x\": \"helicopter\",\n        \"y\": 146\n      }, {\n        \"x\": \"boat\",\n        \"y\": 103\n      }, {\n        \"x\": \"train\",\n        \"y\": 118\n      }, {\n        \"x\": \"subway\",\n        \"y\": 268\n      }, {\n        \"x\": \"bus\",\n        \"y\": 22\n      }, {\n        \"x\": \"car\",\n        \"y\": 124\n      }, {\n        \"x\": \"moto\",\n        \"y\": 205\n      }, {\n        \"x\": \"bicycle\",\n        \"y\": 281\n      }, {\n        \"x\": \"horse\",\n        \"y\": 204\n      }, {\n        \"x\": \"skateboard\",\n        \"y\": 181\n      }, {\n        \"x\": \"others\",\n        \"y\": 210\n      }]\n    }];\n\n    const MyResponsiveLine = ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n      data: data,\n      margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n      },\n      xScale: {\n        type: 'point'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false\n      },\n      yFormat: \" >-.2f\",\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle'\n      },\n      axisLeft: {\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle'\n      },\n      pointSize: 10,\n      pointColor: {\n        theme: 'background'\n      },\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabelYOffset: -12,\n      useMesh: true,\n      legends: [{\n        anchor: 'bottom-right',\n        direction: 'column',\n        justify: false,\n        translateX: 100,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemDirection: 'left-to-right',\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: 'circle',\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }]\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n\n    return MyResponsiveLine;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DetailsMetrics\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-new-metrics\",\n          children: \"Add new entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DetailsMetrics;","map":{"version":3,"sources":["/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/DetailsMetrics.js"],"names":["React","Link","Button","MetricsService","ResponsiveLine","DetailsMetrics","Component","state","metricsInfo","service","componentDidMount","getAllMetrics","props","loggedInUser","_id","then","data","json","dataJSON","setState","results","catch","err","console","log","renderChart","MyResponsiveLine","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport MetricsService from '../services/MetricsService';\nimport { ResponsiveLine } from '@nivo/line'\n\n\n\nclass DetailsMetrics extends React.Component{\n\n  state = {\n    metricsInfo: []\n  }\n\n  service = new MetricsService()\n\n  \n  componentDidMount(){\n    this.service.\n    getAllMetrics(this.props.loggedInUser._id) //=> LLAMADA A MI API PARA DEVOLVER TODOS LOS EJERCICIOS DEL USUARIO ACTIVO\n    .then((data)=>{\n      return data.json()\n    })\n    .then((dataJSON)=>{\n      this.setState({metricsInfo: dataJSON.results})\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  \n  renderChart(){\n    const data = [\n      {\n        \"id\": \"japan\",\n        \"color\": \"hsl(40, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 46\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 216\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 33\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 152\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 74\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 274\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 196\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 60\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 2\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 64\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 295\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 78\n          }\n        ]\n      },\n      {\n        \"id\": \"france\",\n        \"color\": \"hsl(56, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 251\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 210\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 23\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 190\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 96\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 27\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 87\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 258\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 158\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 66\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 42\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 266\n          }\n        ]\n      },\n      {\n        \"id\": \"us\",\n        \"color\": \"hsl(73, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 161\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 116\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 95\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 41\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 20\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 26\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 46\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 15\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 67\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 76\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 158\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 272\n          }\n        ]\n      },\n      {\n        \"id\": \"germany\",\n        \"color\": \"hsl(185, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 149\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 132\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 13\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 165\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 44\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 49\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 156\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 124\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 125\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 57\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 75\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 281\n          }\n        ]\n      },\n      {\n        \"id\": \"norway\",\n        \"color\": \"hsl(127, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 254\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 146\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 103\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 118\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 268\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 22\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 124\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 205\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 281\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 204\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 181\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 210\n          }\n        ]\n      }\n    ]\n\n    const MyResponsiveLine = ({ data }) => (\n      <ResponsiveLine\n          data={data}\n          margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n          xScale={{ type: 'point' }}\n          yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n          yFormat=\" >-.2f\"\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n              orient: 'bottom',\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: 'transportation',\n              legendOffset: 36,\n              legendPosition: 'middle'\n          }}\n          axisLeft={{\n              orient: 'left',\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: 'count',\n              legendOffset: -40,\n              legendPosition: 'middle'\n          }}\n          pointSize={10}\n          pointColor={{ theme: 'background' }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: 'serieColor' }}\n          pointLabelYOffset={-12}\n          useMesh={true}\n          legends={[\n              {\n                  anchor: 'bottom-right',\n                  direction: 'column',\n                  justify: false,\n                  translateX: 100,\n                  translateY: 0,\n                  itemsSpacing: 0,\n                  itemDirection: 'left-to-right',\n                  itemWidth: 80,\n                  itemHeight: 20,\n                  itemOpacity: 0.75,\n                  symbolSize: 12,\n                  symbolShape: 'circle',\n                  symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                  effects: [\n                      {\n                          on: 'hover',\n                          style: {\n                              itemBackground: 'rgba(0, 0, 0, .03)',\n                              itemOpacity: 1\n                          }\n                      }\n                  ]\n              }\n          ]}\n      />\n    )\n    return MyResponsiveLine\n  }\n\n\n\n  render(){\n    return(\n      <div className=\"DetailsMetrics\">\n        <Button variant=\"warning\">\n          <Link to=\"/add-new-metrics\">Add new entry</Link>\n        </Button>\n      </div>\n    )    \n  }\n}\n\nexport default DetailsMetrics"]},"metadata":{},"sourceType":"module"}
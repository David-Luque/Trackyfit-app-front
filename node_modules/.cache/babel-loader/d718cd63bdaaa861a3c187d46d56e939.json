{"ast":null,"code":"import axios from \"axios\";\n\nclass MetricsService {\n  constructor() {\n    this.getAllMetrics = userID => {\n      return this.service.get(`/get-all-metrics/${userID}`, {\n        userID\n      }).then(response => response.data);\n    };\n\n    this.addMetrics = (weight, shoulders, abs, cuadriceps, date, owner) => {\n      return this.service.post(\"/add-metrics\", {\n        weight,\n        shoulders,\n        abs,\n        cuadriceps,\n        date,\n        owner\n      }).then(response => response.data);\n    };\n\n    let service = axios.create({\n      baseURL: \"http://localhost:3000\",\n      //=> CAMBIAR POR EL ENLACE DE MI BACKEND EN HEROKU\n      withCredentials: true\n    });\n    this.service = service;\n  } //   leyendo = (mangaID, userID) => {\n  //     return this.service.post(\"/leyendo\", {mangaID, userID})\n  //     .then(response => response.data)\n  //   }\n  //   porLeer = (mangaID, userID) => {\n  //     return this.service.post(\"/porLeer\", {mangaID, userID})\n  //     .then(response => response.data)\n  //   }\n\n\n}\n\nexport default MetricsService;","map":{"version":3,"sources":["/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/services/MetricsService.js"],"names":["axios","MetricsService","constructor","getAllMetrics","userID","service","get","then","response","data","addMetrics","weight","shoulders","abs","cuadriceps","date","owner","post","create","baseURL","withCredentials"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,cAAN,CAAqB;AAEnBC,EAAAA,WAAW,GAAG;AAAA,SAUdC,aAVc,GAUGC,MAAD,IAAY;AAC1B,aAAO,KAAKC,OAAL,CAAaC,GAAb,CAAkB,oBAAmBF,MAAO,EAA5C,EAA+C;AAACA,QAAAA;AAAD,OAA/C,EACNG,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAba;;AAAA,SAgBdC,UAhBc,GAgBD,CAACC,MAAD,EAASC,SAAT,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,KAAqD;AAChE,aAAO,KAAKX,OAAL,CAAaY,IAAb,CAAkB,cAAlB,EAAkC;AAACN,QAAAA,MAAD;AAASC,QAAAA,SAAT;AAAoBC,QAAAA,GAApB;AAAyBC,QAAAA,UAAzB;AAAqCC,QAAAA,IAArC;AAA2CC,QAAAA;AAA3C,OAAlC,EACNT,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAnBa;;AACZ,QAAIJ,OAAO,GAAGL,KAAK,CAACkB,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAE,uBADgB;AACS;AAClCC,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAMA,SAAKf,OAAL,GAAeA,OAAf;AACD,GAVkB,CAuBrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA/BqB;;AAoCrB,eAAeJ,cAAf","sourcesContent":["  \nimport axios from \"axios\";\n\n\nclass MetricsService {\n\n  constructor() {\n    let service = axios.create({\n      baseURL: \"http://localhost:3000\", //=> CAMBIAR POR EL ENLACE DE MI BACKEND EN HEROKU\n      withCredentials: true\n    });\n\n\n    this.service = service;\n  }\n\n  getAllMetrics = (userID) => {\n    return this.service.get(`/get-all-metrics/${userID}`, {userID})\n    .then(response => response.data)\n  }\n\n\n  addMetrics = (weight, shoulders, abs, cuadriceps, date, owner) => {\n    return this.service.post(\"/add-metrics\", {weight, shoulders, abs, cuadriceps, date, owner})\n    .then(response => response.data)\n  }\n\n//   leyendo = (mangaID, userID) => {\n//     return this.service.post(\"/leyendo\", {mangaID, userID})\n//     .then(response => response.data)\n//   }\n\n//   porLeer = (mangaID, userID) => {\n//     return this.service.post(\"/porLeer\", {mangaID, userID})\n//     .then(response => response.data)\n//   }\n\n \n}\n\nexport default MetricsService;"]},"metadata":{},"sourceType":"module"}
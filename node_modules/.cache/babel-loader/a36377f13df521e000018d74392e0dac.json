{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/DetailsWorkouts.js\";\nimport React from 'react';\nimport '../styles/AllExercises.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport ExerciseService from '../services/ExerciseService';\nimport Chart from 'chart.js';\n\nclass DetailsWorkouts extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      exercisesData: []\n    };\n    this.service = new ExerciseService();\n\n    this.renderLoadingImage = () => {\n      // return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"Loading\"/> \n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.service.getAllExercises(this.props.loggedInUser._id).then(result => {\n      this.setState({\n        exercisesData: result\n      });\n      this.renderChart();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // renderExercises = ()=>{\n  //   return this.state.exercises.map((exercise, index)=>{\n  //     return(\n  //       <Link to={`/all-exercises/${exercise._id}`} key={index}>\n  //         <div className=\"exercise-container\">\n  //           <h5>{exercise.name}</h5>\n  //           <p>{exercise.exerType}</p>\n  //         </div>\n  //       </Link>\n  //     )\n  //   })\n  // }\n\n\n  renderChart() {\n    console.log('RENDER CHART workouts');\n    const pushUpsData = this.state.exercisesData.map(element => {\n      return element.pushUps;\n    });\n    const pullUpsData = this.state.exercisesData.map(element => {\n      return element.pullUps;\n    });\n    const plankData = this.state.exercisesData.map(element => {\n      return element.plank;\n    });\n    const squatsData = this.state.exercisesData.map(element => {\n      return element.squats;\n    });\n    const dateData = this.state.exercisesData.map(element => {\n      return element.date;\n    });\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dateData,\n        datasets: [{\n          label: 'pushUps',\n          backgroundColor: 'rgba(219, 132, 28, 0.2)',\n          borderColor: 'rgb(219, 132, 28)',\n          data: pushUpsData\n        }, {\n          label: 'pullUps',\n          backgroundColor: 'rgba(166, 0, 243, 0.2)',\n          borderColor: 'rgb(166, 0, 243)',\n          data: pullUpsData\n        }, {\n          label: 'plank',\n          backgroundColor: 'rgba(1, 189, 160, 0.2)',\n          borderColor: 'rgb(1, 189, 160)',\n          data: plankData\n        }, {\n          label: 'squats',\n          backgroundColor: 'rgba(161, 213, 0, 0.2)',\n          borderColor: 'rgb(161, 213, 0)',\n          data: squatsData\n        }]\n      },\n      // Configuration options go here\n      options: {\n        aspectRatio: 1,\n        layout: {\n          padding: {\n            left: 10,\n            right: 10,\n            top: 10,\n            bottom: 10\n          }\n        },\n        legend: {\n          labels: {\n            boxWidth: 25,\n            padding: 20,\n            fontColor: '#D6D6D6'\n          }\n        }\n      }\n    });\n    return chart;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllExercises\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-exercise\",\n          children: \"add workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-exercises-container\",\n        children: this.state.exercisesData.length === 0 ? this.renderLoadingImage() : /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"workouts-chart\",\n          id: \"myChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DetailsWorkouts;","map":{"version":3,"sources":["/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/DetailsWorkouts.js"],"names":["React","Link","Button","ExerciseService","Chart","DetailsWorkouts","Component","state","exercisesData","service","renderLoadingImage","componentDidMount","getAllExercises","props","loggedInUser","_id","then","result","setState","renderChart","catch","err","console","log","pushUpsData","map","element","pushUps","pullUpsData","pullUps","plankData","plank","squatsData","squats","dateData","date","ctx","document","getElementById","getContext","chart","type","data","labels","datasets","label","backgroundColor","borderColor","options","aspectRatio","layout","padding","left","right","top","bottom","legend","boxWidth","fontColor","render","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../styles/AllExercises.css'\nimport { Link } from 'react-router-dom';\nimport { Button} from 'react-bootstrap';\nimport ExerciseService from '../services/ExerciseService'\nimport Chart from 'chart.js';\n\n\nclass DetailsWorkouts extends React.Component {\n\n  state = {\n    exercisesData: []\n  }\n\n  service = new ExerciseService()\n\n  componentDidMount(){\n    this.service\n    .getAllExercises(this.props.loggedInUser._id) \n    .then((result)=>{\n      this.setState({exercisesData: result})\n      this.renderChart()\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  // renderExercises = ()=>{\n  //   return this.state.exercises.map((exercise, index)=>{\n  //     return(\n  //       <Link to={`/all-exercises/${exercise._id}`} key={index}>\n  //         <div className=\"exercise-container\">\n  //           <h5>{exercise.name}</h5>\n  //           <p>{exercise.exerType}</p>\n  //         </div>\n  //       </Link>\n  //     )\n  //   })\n  // }\n\n\n  renderChart(){\n    console.log('RENDER CHART workouts')\n\n      const pushUpsData = this.state.exercisesData.map((element)=>{\n        return element.pushUps\n      })\n\n      const pullUpsData = this.state.exercisesData.map((element)=>{\n        return element.pullUps\n      })\n\n      const plankData = this.state.exercisesData.map((element)=>{\n        return element.plank\n      })\n\n      const squatsData = this.state.exercisesData.map((element)=>{\n        return element.squats\n      })\n\n      const dateData = this.state.exercisesData.map((element)=>{\n        return element.date\n      })\n\n      const ctx = document.getElementById('myChart').getContext('2d');\n      \n      const chart = new Chart(ctx, {\n          type: 'line',\n          \n          data: {\n              labels: dateData,\n              datasets: [\n                {\n                  label: 'pushUps',\n                  backgroundColor: 'rgba(219, 132, 28, 0.2)',\n                  borderColor: 'rgb(219, 132, 28)',\n                  data: pushUpsData\n                },{\n                  label: 'pullUps',\n                  backgroundColor: 'rgba(166, 0, 243, 0.2)',\n                  borderColor: 'rgb(166, 0, 243)',\n                  data: pullUpsData\n                },{\n                  label: 'plank',\n                  backgroundColor: 'rgba(1, 189, 160, 0.2)',\n                  borderColor: 'rgb(1, 189, 160)',\n                  data: plankData\n                },{\n                  label: 'squats',\n                  backgroundColor: 'rgba(161, 213, 0, 0.2)',\n                  borderColor: 'rgb(161, 213, 0)',\n                  data: squatsData\n                }\n              ]\n          },\n\n          // Configuration options go here\n          options: {\n            aspectRatio: 1,\n            layout: {\n              padding: {\n                left: 10,\n                right: 10,\n                top: 10,\n                bottom: 10\n              }\n            },\n            legend: {\n              labels: {\n                boxWidth: 25,\n                padding: 20,\n                fontColor: '#D6D6D6'\n              }\n            }\n          }\n      });\n\n      return chart\n  }\n\n\n\n  renderLoadingImage = ()=>{\n    // return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"Loading\"/> \n    return <p>Loading...</p>\n  }\n\n  render(){\n    return(\n      <div className=\"AllExercises\">\n        <Button variant=\"info\">\n          <Link to=\"/create-exercise\">add workout</Link>\n        </Button>\n\n        <div className=\"all-exercises-container\">\n          {this.state.exercisesData.length === 0 \n            ? this.renderLoadingImage() \n            : <canvas className=\"workouts-chart\" id=\"myChart\"></canvas>}          \n        </div>\n      </div>\n    )    \n  }\n}\n\nexport default DetailsWorkouts"]},"metadata":{},"sourceType":"module"}
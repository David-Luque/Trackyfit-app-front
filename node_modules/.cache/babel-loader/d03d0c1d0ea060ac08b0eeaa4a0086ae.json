{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/FormMetrics.js\";\nimport React from 'react';\nimport '../styles/FormMetrics.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport MetricsService from '../services/MetricsService';\n\nclass FormMetrics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weight: '',\n      shoulders: '',\n      abs: '',\n      cuadriceps: '',\n      date: '',\n      owner: ''\n    };\n    this.service = new MetricsService();\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.service.addMetrics(this.state.weight, this.state.shoulders, this.state.abs, this.state.cuadriceps, this.state.date, this.state.owner).then(response => {\n        console.log(response);\n      }).catch(err => console.error(err));\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/details-metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    // const getDate = ()=>{\n    //     var today = new Date();\n    //     var dd = String(today.getDate()).padStart(2, '0');\n    //     var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    //     var yyyy = today.getFullYear();\n    //     today = mm + '/' + dd + '/' + yyyy;\n    //     return today\n    // }\n    // const todayDate = getDate()\n    this.setState({\n      owner: this.props.loggedInUser._id\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New metrics entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicWeight\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"weight\",\n            children: \"your weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"weight\",\n            placeholder: \"kg\",\n            value: this.state.weight,\n            onChange: event => this.handleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicShoulders\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"shoulders\",\n            children: \"shoulders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"shoulders\",\n            placeholder: \"cm\",\n            value: this.state.shoulders,\n            onChange: event => this.handleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicAbs\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"abs\",\n            children: \"abs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"abs\",\n            placeholder: \"cm\",\n            value: this.state.abs,\n            onChange: event => this.handleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCuadriceps\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"cuadriceps\",\n            children: \"cuadriceps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"cuadriceps\",\n            placeholder: \"cm\",\n            value: this.state.cuadriceps,\n            onChange: event => this.handleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicDate\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"date\",\n            value: this.state.date,\n            onChange: event => this.handleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          type: \"submit\",\n          children: \"confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default FormMetrics;","map":{"version":3,"sources":["/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/FormMetrics.js"],"names":["React","Link","Redirect","Button","Form","MetricsService","FormMetrics","Component","state","weight","shoulders","abs","cuadriceps","date","owner","service","handleFormSubmit","event","preventDefault","addMetrics","then","response","console","log","catch","err","error","handleChange","name","value","target","setState","componentDidMount","props","loggedInUser","_id","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\nimport '../styles/FormMetrics.css'\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Button, Form } from 'react-bootstrap';\n\nimport MetricsService from '../services/MetricsService'\n\nclass FormMetrics extends React.Component {\n\n    state = {\n        weight: '',\n        shoulders: '',\n        abs: '',\n        cuadriceps: '',\n        date: '',\n        owner: ''\n    };\n\n  service = new MetricsService()\n\n\n    componentDidMount(){\n        // const getDate = ()=>{\n        //     var today = new Date();\n        //     var dd = String(today.getDate()).padStart(2, '0');\n        //     var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        //     var yyyy = today.getFullYear();\n        //     today = mm + '/' + dd + '/' + yyyy;\n        //     return today\n        // }\n        // const todayDate = getDate()\n\n        this.setState({owner: this.props.loggedInUser._id})\n    }\n\n  handleFormSubmit = (event) => {\n        event.preventDefault();\n        this.service\n            .addMetrics (\n                this.state.weight,\n                this.state.shoulders,\n                this.state.abs,\n                this.state.cuadriceps,\n                this.state.date,\n                this.state.owner,\n            )\n            .then((response) => {\n                console.log(response)\n            })\n            .catch((err) => console.error(err));\n            \n            <Redirect to=\"/details-metrics\" />\n    };\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n\n  render() {\n    return (\n        <div>\n            <h2>New metrics entry</h2>\n            {/* <form onSubmit={this.handleFormSubmit}>\n                <label htmlFor=\"weight\">Weight: </label>\n                <input\n                    type=\"number\"\n                    name=\"weight\"\n                    value={this.state.weight}\n                    onChange={(event) => this.handleChange(event)}\n                />\n                <br />\n                <label htmlFor=\"shoulders\">shoulders: </label>\n                <input\n                    type=\"number\"\n                    name=\"shoulders\"\n                    value={this.state.shoulders}\n                    onChange={(event) => this.handleChange(event)}\n                />\n                <br />\n                <label htmlFor=\"abs\">abs: </label>\n                <input\n                    type=\"number\"\n                    name=\"abs\"\n                    value={this.state.abs}\n                    onChange={(event) => this.handleChange(event)}\n                />\n                <br />\n                <label htmlFor=\"cuadriceps\">cuadriceps: </label>\n                <input\n                    type=\"number\"\n                    name=\"cuadriceps\"\n                    value={this.state.cuadriceps}\n                    onChange={(event) => this.handleChange(event)}\n                />\n                <br />\n                <button type=\"submit\">add entry</button>\n            </form> */}\n\n            <Form className=\"form\" onSubmit={this.handleFormSubmit}>\n\n                <Form.Group controlId=\"formBasicWeight\">\n                    <Form.Label htmlFor=\"weight\">your weight</Form.Label>\n                    <Form.Control type=\"number\" name=\"weight\" placeholder=\"kg\" value={this.state.weight} onChange={(event) => this.handleChange(event)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicShoulders\">\n                    <Form.Label htmlFor=\"shoulders\">shoulders</Form.Label>\n                    <Form.Control type=\"number\" name=\"shoulders\" placeholder=\"cm\" value={this.state.shoulders} onChange={(event) => this.handleChange(event)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicAbs\">\n                    <Form.Label htmlFor=\"abs\">abs</Form.Label>\n                    <Form.Control type=\"number\" name=\"abs\" placeholder=\"cm\" value={this.state.abs} onChange={(event) => this.handleChange(event)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicCuadriceps\">\n                    <Form.Label htmlFor=\"cuadriceps\">cuadriceps</Form.Label>\n                    <Form.Control type=\"number\" name=\"cuadriceps\" placeholder=\"cm\" value={this.state.cuadriceps} onChange={(event) => this.handleChange(event)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicDate\">\n                    <Form.Label htmlFor=\"date\">Date</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\" value={this.state.date} onChange={(event) => this.handleChange(event)} />\n                </Form.Group>\n\n                <Button variant=\"info\" type=\"submit\">\n                    confirm\n                </Button>\n            </Form>\n        </div>\n    );\n}\n}\n\nexport default FormMetrics"]},"metadata":{},"sourceType":"module"}
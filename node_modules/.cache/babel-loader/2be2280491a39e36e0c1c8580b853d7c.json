{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/ExercisesChart.js\";\nimport React from 'react';\nimport '../styles/AllExercises.css';\nimport { Link, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport ExerciseService from '../services/ExerciseService';\nimport Chart from 'chart.js';\n\nclass AllExercises extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      exercisesData: []\n    };\n    this.service = new ExerciseService();\n\n    this.renderLoadingImage = () => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }, this); //=> url SPINNER DE CARGA\n    };\n  }\n\n  componentDidMount() {\n    this.service.getAllExercises(this.props.loggedInUser._id).then(result => {\n      this.setState({\n        exercisesData: result\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // renderExercises = ()=>{\n  //   return this.state.exercises.map((exercise, index)=>{\n  //     return(\n  //       <Link to={`/all-exercises/${exercise._id}`} key={index}>\n  //         <div className=\"exercise-container\">\n  //           <h5>{exercise.name}</h5>\n  //           <p>{exercise.exerType}</p>\n  //         </div>\n  //       </Link>\n  //     )\n  //   })\n  // }\n\n\n  renderChart() {\n    console.log('RENDER CHART workouts');\n    const weightData = this.state.metricsInfo.map(element => {\n      return element.weight;\n    });\n    const shouldersData = this.state.metricsInfo.map(element => {\n      return element.shoulders;\n    });\n    const absData = this.state.metricsInfo.map(element => {\n      return element.abs;\n    });\n    const cuadricepsData = this.state.metricsInfo.map(element => {\n      return element.cuadriceps;\n    });\n    const dateData = this.state.metricsInfo.map(element => {\n      return element.date;\n    }); // const sortedData = this.state.metricsInfo.sort((a, b) => {\n    //     a = a.date.split('/').join('');\n    //     b = b.date.split('/').join('');\n    //     return a > b ? 1 : a < b ? -1 : 0;\n    // })\n    //  console.log(`sorted data: ${dateData}`)\n\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dateData,\n        datasets: [{\n          label: 'weight',\n          backgroundColor: 'rgba(87, 87, 205, 0.2)',\n          borderColor: 'rgb(87, 87, 205)',\n          data: weightData\n        }, {\n          label: 'shoulders',\n          backgroundColor: 'rgba(205, 87, 87, 0.2)',\n          borderColor: 'rgb(205, 87, 87)',\n          data: shouldersData\n        }, {\n          label: 'abs',\n          backgroundColor: 'rgba(87, 205, 139, 0.2)',\n          borderColor: 'rgb(87, 205, 139)',\n          data: absData\n        }, {\n          label: 'cuadriceps',\n          backgroundColor: 'rgba(205, 196, 87, 0.2)',\n          borderColor: 'rgb(205, 196, 87)',\n          data: cuadricepsData\n        }]\n      },\n      // Configuration options go here\n      options: {\n        aspectRatio: 1,\n        layout: {\n          padding: {\n            left: 10,\n            right: 10,\n            top: 10,\n            bottom: 10\n          }\n        },\n        legend: {\n          labels: {\n            boxWidth: 25,\n            padding: 20\n          }\n        }\n      }\n    });\n    return chart;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllExercises\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-exercise\",\n          children: \"add workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-exercises-container\",\n        children: this.state.exercisesData.length === 0 ? this.renderLoadingImage() : /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"workouts-chart\",\n          id: \"myChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AllExercises;","map":{"version":3,"sources":["/Users/davidlqlb/Desktop/project-fullstack-app/full_app_front/src/components/ExercisesChart.js"],"names":["React","Link","Route","Button","ExerciseService","Chart","AllExercises","Component","state","exercisesData","service","renderLoadingImage","componentDidMount","getAllExercises","props","loggedInUser","_id","then","result","setState","catch","err","console","log","renderChart","weightData","metricsInfo","map","element","weight","shouldersData","shoulders","absData","abs","cuadricepsData","cuadriceps","dateData","date","ctx","document","getElementById","getContext","chart","type","data","labels","datasets","label","backgroundColor","borderColor","options","aspectRatio","layout","padding","left","right","top","bottom","legend","boxWidth","render","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../styles/AllExercises.css'\nimport { Link, Route } from 'react-router-dom';\nimport { Button} from 'react-bootstrap';\nimport ExerciseService from '../services/ExerciseService'\nimport Chart from 'chart.js';\n\n\nclass AllExercises extends React.Component {\n\n  state = {\n    exercisesData: []\n  }\n\n  service = new ExerciseService()\n\n  componentDidMount(){\n    this.service\n    .getAllExercises(this.props.loggedInUser._id) \n    .then((result)=>{\n      this.setState({exercisesData: result})\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  // renderExercises = ()=>{\n  //   return this.state.exercises.map((exercise, index)=>{\n  //     return(\n  //       <Link to={`/all-exercises/${exercise._id}`} key={index}>\n  //         <div className=\"exercise-container\">\n  //           <h5>{exercise.name}</h5>\n  //           <p>{exercise.exerType}</p>\n  //         </div>\n  //       </Link>\n  //     )\n  //   })\n  // }\n\n\n  renderChart(){\n    console.log('RENDER CHART workouts')\n\n      const weightData = this.state.metricsInfo.map((element)=>{\n        return element.weight\n      })\n\n      const shouldersData = this.state.metricsInfo.map((element)=>{\n        return element.shoulders\n      })\n\n      const absData = this.state.metricsInfo.map((element)=>{\n        return element.abs\n      })\n\n      const cuadricepsData = this.state.metricsInfo.map((element)=>{\n        return element.cuadriceps\n      })\n\n      const dateData = this.state.metricsInfo.map((element)=>{\n        return element.date\n      })\n\n      // const sortedData = this.state.metricsInfo.sort((a, b) => {\n      //     a = a.date.split('/').join('');\n      //     b = b.date.split('/').join('');\n      //     return a > b ? 1 : a < b ? -1 : 0;\n        \n      // })\n      //  console.log(`sorted data: ${dateData}`)\n\n      const ctx = document.getElementById('myChart').getContext('2d');\n      \n      const chart = new Chart(ctx, {\n          type: 'line',\n          \n          data: {\n              labels: dateData,\n              datasets: [\n                {\n                  label: 'weight',\n                  backgroundColor: 'rgba(87, 87, 205, 0.2)',\n                  borderColor: 'rgb(87, 87, 205)',\n                  data: weightData\n                },{\n                  label: 'shoulders',\n                  backgroundColor: 'rgba(205, 87, 87, 0.2)',\n                  borderColor: 'rgb(205, 87, 87)',\n                  data: shouldersData\n                },{\n                  label: 'abs',\n                  backgroundColor: 'rgba(87, 205, 139, 0.2)',\n                  borderColor: 'rgb(87, 205, 139)',\n                  data: absData\n                },{\n                  label: 'cuadriceps',\n                  backgroundColor: 'rgba(205, 196, 87, 0.2)',\n                  borderColor: 'rgb(205, 196, 87)',\n                  data: cuadricepsData\n                }\n              ]\n          },\n\n          // Configuration options go here\n          options: {\n            aspectRatio: 1,\n            layout: {\n              padding: {\n                left: 10,\n                right: 10,\n                top: 10,\n                bottom: 10\n              }\n            },\n            legend: {\n              labels: {\n                boxWidth: 25,\n                padding: 20\n              }\n            }\n          }\n      });\n\n      return chart\n  }\n\n\n\n  renderLoadingImage = ()=>{\n    return <img src=\"\" alt=\"Loading\"/> //=> url SPINNER DE CARGA\n  }\n\n  render(){\n    return(\n      <div className=\"AllExercises\">\n        <Button variant=\"warning\">\n          <Link to=\"/create-exercise\">add workout</Link>\n        </Button>\n\n        <div className=\"all-exercises-container\">\n          {this.state.exercisesData.length === 0 \n            ? this.renderLoadingImage() \n            : <canvas className=\"workouts-chart\" id=\"myChart\"></canvas>}          \n        </div>\n      </div>\n    )    \n  }\n}\n\nexport default AllExercises"]},"metadata":{},"sourceType":"module"}
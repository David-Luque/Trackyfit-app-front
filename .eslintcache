[{"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/index.js":"1","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/App.js":"2","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/reportWebVitals.js":"3","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Navbar.js":"4","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/LogIn.js":"5","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/SignUp.js":"6","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/UserService.js":"7","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Home.js":"8","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/UserProfile.js":"9","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/ProtectedRoute.js":"10","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/ExerciseService.js":"11","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/MetricsService.js":"12","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/AllMetrics.js":"13","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/DetailsWorkout.js":"14","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/UpdateWorkout.js":"15","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/CreateWorkout.js":"16","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/AllWorkouts.js":"17","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/DetailsMetrics.js":"18","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/DetailsExercise.js":"19","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/CreateExercise.js":"20","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/AllExercises.js":"21","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/EditExercise.js":"22","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/FormExerciseResults.js":"23","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/ResultsService.js":"24","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/WorkoutService.js":"25","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/CreateMetric.js":"26","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/FormMetricMeasure.js":"27","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/MeasureService.js":"28","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/EditMetric.js":"29","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authState.js":"30","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authReducer.js":"31","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/types/index.js":"32","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/config/axios.js":"33","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authContext.js":"34","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/alerts/alertsContext.js":"35","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/config/authToken.js":"36","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsState.js":"37","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseState.js":"38","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsState.js":"39","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureState.js":"40","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsContext.js":"41","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseContext.js":"42","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseReducer.js":"43","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsReducer.js":"44","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureReducer.js":"45","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsContext.js":"46","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureContext.js":"47","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsReducer.js":"48"},{"size":297,"mtime":1638880286694,"results":"49","hashOfConfig":"50"},{"size":3563,"mtime":1638882262019,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1610198794240,"results":"52","hashOfConfig":"50"},{"size":2101,"mtime":1638210104555,"results":"53","hashOfConfig":"50"},{"size":1942,"mtime":1638558183857,"results":"54","hashOfConfig":"50"},{"size":2657,"mtime":1638558183857,"results":"55","hashOfConfig":"50"},{"size":809,"mtime":1638470253658,"results":"56","hashOfConfig":"50"},{"size":901,"mtime":1610198794237,"results":"57","hashOfConfig":"50"},{"size":1067,"mtime":1638210381889,"results":"58","hashOfConfig":"50"},{"size":531,"mtime":1638029049928,"results":"59","hashOfConfig":"50"},{"size":948,"mtime":1638829296054,"results":"60","hashOfConfig":"50"},{"size":987,"mtime":1638829296046,"results":"61","hashOfConfig":"50"},{"size":1822,"mtime":1638036518059,"results":"62","hashOfConfig":"50"},{"size":0,"mtime":1621869828016,"results":"63","hashOfConfig":"50"},{"size":0,"mtime":1621869533132,"results":"64","hashOfConfig":"50"},{"size":1397,"mtime":1638209321843,"results":"65","hashOfConfig":"50"},{"size":1546,"mtime":1638208966568,"results":"66","hashOfConfig":"50"},{"size":5183,"mtime":1638037446766,"results":"67","hashOfConfig":"50"},{"size":5862,"mtime":1638299605631,"results":"68","hashOfConfig":"50"},{"size":996,"mtime":1638302149338,"results":"69","hashOfConfig":"50"},{"size":1866,"mtime":1638027073929,"results":"70","hashOfConfig":"50"},{"size":1096,"mtime":1638028599586,"results":"71","hashOfConfig":"50"},{"size":2079,"mtime":1638028976822,"results":"72","hashOfConfig":"50"},{"size":458,"mtime":1638829296045,"results":"73","hashOfConfig":"50"},{"size":557,"mtime":1638298776953,"results":"74","hashOfConfig":"50"},{"size":1420,"mtime":1638036715074,"results":"75","hashOfConfig":"50"},{"size":1679,"mtime":1638207273468,"results":"76","hashOfConfig":"50"},{"size":468,"mtime":1638831212934,"results":"77","hashOfConfig":"50"},{"size":1460,"mtime":1638206986953,"results":"78","hashOfConfig":"50"},{"size":2157,"mtime":1638467638089,"results":"79","hashOfConfig":"50"},{"size":718,"mtime":1638468773510,"results":"80","hashOfConfig":"50"},{"size":785,"mtime":1638829348655,"results":"81","hashOfConfig":"50"},{"size":138,"mtime":1638391247476,"results":"82","hashOfConfig":"50"},{"size":105,"mtime":1638391319751,"results":"83","hashOfConfig":"50"},{"size":0,"mtime":1638554024132,"results":"84","hashOfConfig":"50"},{"size":266,"mtime":1638879745610,"results":"85","hashOfConfig":"50"},{"size":951,"mtime":1638829213788,"results":"86","hashOfConfig":"50"},{"size":2777,"mtime":1638737606370,"results":"87","hashOfConfig":"50"},{"size":2717,"mtime":1638809212205,"results":"88","hashOfConfig":"50"},{"size":979,"mtime":1638831195672,"results":"89","hashOfConfig":"50"},{"size":111,"mtime":1638809019621,"results":"90","hashOfConfig":"50"},{"size":113,"mtime":1638646932597,"results":"91","hashOfConfig":"50"},{"size":828,"mtime":1638737606370,"results":"92","hashOfConfig":"50"},{"size":387,"mtime":1638829222177,"results":"93","hashOfConfig":"50"},{"size":350,"mtime":1638831195671,"results":"94","hashOfConfig":"50"},{"size":111,"mtime":1638738511294,"results":"95","hashOfConfig":"50"},{"size":111,"mtime":1638830296524,"results":"96","hashOfConfig":"50"},{"size":1106,"mtime":1638806040483,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73rot7",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/index.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/App.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/reportWebVitals.js",[],["200","201"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Navbar.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/LogIn.js",["202"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/SignUp.js",["203"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/UserService.js",["204"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Home.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/UserProfile.js",["205","206"],"import React, { useState, useEffect } from 'react'\nimport UserService from '../services/UserService'\nimport '../styles/UserProfile.css'\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\n\nconst UserProfile = ({ loggedInUser }) => {\n\n  const [ _loggedInUser, set_LoggedInUser ] = useState(null);\n\n  const userService = new UserService();\n\n  useEffect(()=>{\n    userService.loggedIn()\n    .then((response)=>{\n      set_LoggedInUser(response);\n    })\n    .catch(err => console.log(err))\n  }, []);\n\n\n  return(\n    <div className=\"UserProfile\">\n      <h2>Welcome {loggedInUser.username}</h2>\n      <div className=\"user-info-buttons\">\n        <Link to=\"/all-exercises\">\n          <Button variant=\"info\"> My exercises </Button>\n        </Link>\n        <br />\n        <Link to=\"/all-metrics\">\n          <Button variant=\"info\"> My metrics </Button>\n        </Link>\n        <br />\n        <Link to=\"/workouts\">\n          <Button variant=\"info\"> My workouts </Button>\n        </Link>\n      </div>\n    </div>\n  )    \n}\n\nexport default UserProfile","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/Auth/ProtectedRoute.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/ExerciseService.js",["207"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/MetricsService.js",["208"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/AllMetrics.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/DetailsWorkout.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/UpdateWorkout.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/CreateWorkout.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/workouts_components/AllWorkouts.js",["209"],"import React, { useState, useEffect } from 'react';\nimport WorkoutService from '../../services/WorkoutService';\nimport CreateWorkout from './CreateWorkout';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst AllWorkouts = () => {\n    \n    const [ workouts, setWorkouts ] = useState(null);\n    const [ isCreateWorkoutDisplayed, setIsCreateWorkoutDisplayed ] = useState(false);\n\n    const workoutService = new WorkoutService();\n\n    const getAllWorkouts = ()=>{\n        workoutService.getWorkouts()\n        .then(response => {\n            setWorkouts(response);\n        })\n        .catch(err => console.log(err))\n    };\n\n    useEffect(()=>{\n        getAllWorkouts();\n    }, []);\n\n    const displayWorkouts = ()=>{\n        return workouts.map(element => {\n            return(\n                <Link to={`/workouts/${element._id}`}>\n                    <div>\n                        <h4>{element.name}</h4>\n                        <p>{element.date}</p>\n                    </div>\n                </Link>\n            );\n        });\n    };\n\n    const handleCreateForm = ()=>{\n        setIsCreateWorkoutDisplayed(!isCreateWorkoutDisplayed);\n    };\n    \n    return(\n        <div>\n            <h2>Workouts history</h2>\n            {workouts && displayWorkouts()}\n            <Button onClick={handleCreateForm}>\n                {isCreateWorkoutDisplayed ? \"Cancel\" : \"Create Workout\"}\n            </Button>\n            {isCreateWorkoutDisplayed && <CreateWorkout/>}\n        </div>\n    )\n};\n\nexport default AllWorkouts;","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/DetailsMetrics.js",["210"],"import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap';\nimport EditMetric from './EditMetric';\nimport FormMetricMeasure from './FormMetricMeasure';\nimport MetricsService from '../../services/MetricsService';\nimport UserService from '../../services/UserService'\nimport Chart from 'chart.js';\nimport '../../styles/DetailsChart.css'\n\n\nconst DetailsMetrics = ({ match, history, loggedInUser }) => {\n\n  const [ state, setState ] = useState({\n    loggedInUser: null,\n    metricsData: \"\",\n    dataBaseChecked: false,\n    isMeasureFormDisplayed: false,\n    isEditFormDisplayed: false\n  });\n\n  const metricService = new MetricsService()\n  const userService = new UserService()\n\n  useEffect(()=>{\n    fetchUser();\n    getMetricData();\n  }, []);\n  \n\n  const fetchUser = ()=>{\n    userService.loggedIn()\n    .then((response)=>{\n      setState({\n        ...state,\n        loggedInUser: response\n      })\n    })\n    .catch(err=>console.log(err))\n  };\n\n  const getMetricData = ()=>{\n    metricService.getMetricInfo(match.params.id)\n      .then(result => {\n        setState({\n          ...state,\n          metricsData: result, \n          dataBaseChecked: true\n        })\n        renderChart();\n      })\n      .catch(err=>console.log(err))\n  };\n\n  const renderInfo = ()=>{\n    if(state.metricsData === \"\" || state.metricsData.measures.length === 0){\n      return displayLoad();\n    }\n    \n    return displayChart();\n  };\n\n  function renderChart(){\n      const quantityData = state.metricsData.measures.map((element)=>{\n        return element.quantity\n      })\n      const dateData = state.metricsData.measures.map((element)=>{\n        const stringDate = element.date.toString();\n        const day = stringDate.substr(8, 2);\n        const month = stringDate.substr(5, 2);\n        const year = stringDate.substr(2, 2);\n        const shortDate = `${month}/${day}/${year}`\n        \n        return shortDate;\n      })\n\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n              labels: dateData,\n              datasets: [\n                {\n                  label: 'quantity',\n                  backgroundColor: 'rgba(87, 87, 205, 0.2)',\n                  borderColor: 'rgb(87, 87, 205)',\n                  data: quantityData\n                }\n              ]\n          },\n          options: {\n            aspectRatio: 1,\n            layout: {\n              padding: {\n                left: 10,\n                right: 10,\n                top: 10,\n                bottom: 10\n              }\n            },\n            legend: {\n              labels: {\n                fontSize: 17,\n                boxWidth: 25,\n                padding: 20,\n                fontColor: \"#D6D6D6\"\n              }\n            }\n          }\n      });\n      return chart\n  }\n\n  const displayLoad = ()=>{ \n    if (!state.dataBaseChecked) \n    {\n      return <p className=\"data-message\"> Loading...</p>\n    } else {\n      return <p className=\"data-message\"> No data yet, try to add the first one </p>  \n    }\n  };\n  \n  const displayChart = ()=>{\n    return(\n      <canvas className=\"metrics-chart\" id=\"myChart\"></canvas>\n    );\n  };\n\n  const handleMeasureForm = ()=>{\n    setState({\n      ...state,\n      isMeasureFormDisplayed: !state.isMeasureFormDisplayed\n    })\n  };\n\n  const handleEditForm = ()=>{\n    setState({\n      ...state,\n      isEditFormDisplayed: !state.isEditFormDisplayed\n    });\n  };\n\n  const renderEditForm = ()=>{\n    return (\n      <EditMetric \n        metricId={state.metricsData._id}\n        getMetricData={getMetricData}\n        handleEditForm={handleEditForm}\n        metricInfo={{ name: state.metricsData.name, unit: state.metricsData.unit }}\n      />\n    )\n  };\n\n  const renderMeasureForm = ()=>{\n    return(\n      <FormMetricMeasure \n        getMetricData={getMetricData}\n        handleMeasureForm={handleMeasureForm}\n        metricId={state.metricsData._id}\n        metricUnit={state.metricsData.unit}\n      />\n    )\n  };\n\n  const deleteMetric = ()=>{\n    metricService.deleteMetric(state.metricsData._id)\n    .then(response => {\n      console.log(response);\n      history.replace('/profile')\n      history.push('/all-metrics');\n    })\n    .catch(err => console.log(err))\n  };\n\n  const ownerCheck = ()=>{\n    if(loggedInUser && loggedInUser._id === state.metricsData.owner) {\n      return (\n        <div>\n          <Button onClick={handleEditForm}>\n          {state.isEditFormDisplayed ? \"Cancel\" : \"Edit metric\"}\n          </Button>\n          {state.isEditFormDisplayed && renderEditForm()}\n\n          <hr/>\n          <Button onClick={deleteMetric}>Delete Metric</Button>\n        </div>\n      )\n    }\n  }\n  \n\n  return(\n    <div className=\"DetailsMetrics\">\n      <h2>{state.metricsData.name}</h2>   \n      <Button variant=\"info\" onClick={handleMeasureForm}>\n        {state.isMeasureFormDisplayed ? \"Cancel\" : \"Add measure\"}\n      </Button>\n\n      {state.isMeasureFormDisplayed && renderMeasureForm()}\n\n      <div className=\"all-exercises-container\">\n        {renderInfo()}\n      </div>\n\n      {ownerCheck()}\n\n    </div>\n  )    \n}\n\nexport default DetailsMetrics","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/DetailsExercise.js",["211","212"],"import React, { useState, useEffect } from 'react'\n//import { Link } from 'react-router-dom';\nimport { Button} from 'react-bootstrap';\nimport EditExercise from './EditExercise';\nimport FormExerciseResults from './FormExerciseResults';\nimport ExerciseService from '../../services/ExerciseService'\nimport UserService from '../../services/UserService'\nimport Chart from 'chart.js';\n// import '../styles/DetailsWorkout.css'\n\n//TODO: fix empty chart and alert message with no data\n\nconst DetailsWorkouts = ({ match, history, loggedInUser }) => {\n\n  const [ state, setState ] = useState({\n    loggedInUser: null,\n    exerciseData: \"\",\n    dataBaseChecked: false,\n    isRenameDisplayed: false,\n    isResultsFormDisplayed: false\n  });\n\n  const exerService = new ExerciseService()\n  const userService = new UserService()\n\n  useEffect(()=>{\n    fetchUser()\n    getExerciseInfo();\n  }, []);\n \n\n  const fetchUser = ()=>{\n    userService.loggedIn()\n    .then((response)=>{\n      setState({\n        ...state,\n        loggedInUser: response\n      })\n    })\n    .catch(err=>console.log(err))\n  };\n  \n  const getExerciseInfo = ()=>{\n    exerService.getExerciseInfo(match.params.id) \n      .then((resFromApi)=>{\n        setState({\n          ...state,\n          exerciseData: resFromApi, \n          dataBaseChecked: true\n        })\n        this.renderChart();\n      })\n      .catch(err=>console.log(err))\n  };\n\n  const renderLoadInfo = ()=>{ \n    if (!state.dataBaseChecked) \n    {\n      return <p className=\"data-message\"> Loading...</p>\n    } else {\n      return <p className=\"data-message\"> No data yet, try to add the first one </p>  \n    }\n  };\n\n  const handleRenameForm = ()=>{\n    setState({ \n      ...state,\n      isRenameDisplayed: !state.isRenameDisplayed\n    });\n  };\n\n  const deleteExercise = ()=>{\n    exerService.deleteExercise(state.exerciseData._id)\n    .then(response => {\n      //console.log(response);\n      history.replace(\"/profile\")\n      history.push(\"/all-exercises\")\n    })\n  };\n\n  const handleResultsForm = ()=>{\n    setState({\n      ...state,\n      isResultsFormDisplayed: !state.isResultsFormDisplayed\n    });\n  };\n\n  const displayResultsForm = ()=>{\n    return (\n      <FormExerciseResults \n        exerciseId={state.exerciseData._id} \n        getExerciseInfo={getExerciseInfo}\n        handleResultsForm={handleResultsForm}\n      />\n    )\n  };\n\n  const displayChart = ()=>{\n    return(\n      <canvas className=\"workouts-chart\" id=\"myChart\"></canvas>\n    );\n  };\n\n  const renderChart = ()=>{\n      const repsData = state.exerciseData.results.map((element)=>{\n        return element.reps\n      })\n      const weightData = state.exerciseData.results.map((element)=>{\n        return element.weight\n      })\n      const timeData = state.exerciseData.results.map((element)=>{\n        return element.time\n      })\n\n      const datesData = state.exerciseData.results.map((element)=>{\n        const stringDate = element.date.toString();\n        const day = stringDate.substr(8, 2);\n        const month = stringDate.substr(5, 2);\n        const year = stringDate.substr(2, 2);\n        const shortDate = `${month}/${day}/${year}`\n        \n        return shortDate;\n      })\n\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n              labels: datesData,\n              datasets: [\n                {\n                  label: 'Reps',\n                  backgroundColor: 'rgba(219, 132, 28, 0.2)',\n                  borderColor: 'rgb(219, 132, 28)',\n                  data: repsData\n                },{\n                  label: 'Weight',\n                  backgroundColor: 'rgba(166, 0, 243, 0.2)',\n                  borderColor: 'rgb(166, 0, 243)',\n                  data: weightData\n                },{\n                  label: 'Time',\n                  backgroundColor: 'rgba(1, 189, 160, 0.2)',\n                  borderColor: 'rgb(1, 189, 160)',\n                  data: timeData\n                }\n              ]\n          },\n          options: {\n            aspectRatio: 1,\n            layout: {\n              padding: {\n                left: 10,\n                right: 10,\n                top: 10,\n                bottom: 10\n              }\n            },\n            legend: {\n              labels: {\n                fontSize: 17,\n                boxWidth: 25,\n                padding: 20,\n                fontColor: '#D6D6D6'\n              }\n            }\n          }\n      });\n      return chart\n  };\n\n  const ownerCheck = ()=>{\n    if(loggedInUser && loggedInUser._id === state.exerciseData.owner){\n      return(\n        <div>\n          <Button onClick={handleRenameForm}>\n                {state.isRenameDisplayed ? \"Cancel\" : \"Rename\"}\n              </Button>\n              <br />    \n              \n              {state.isRenameDisplayed && \n                <EditExercise \n                  exerciseId={state.exerciseData._id}\n                  getExerciseInfo={getExerciseInfo}\n                  handleRenameForm={handleRenameForm}\n                  exerciseName={state.exerciseData.name}\n                />\n              }\n\n              <br />\n              <hr />\n          <Button onClick={deleteExercise}>Delete</Button>\n        </div>\n      )\n    }\n    \n  };\n\n\n\n  return(\n    <div className=\"DetailsWorkout\">\n      <h2>{state.exerciseData.name}</h2>\n      \n      <Button variant=\"info\" onClick={handleResultsForm}>\n        {state.isResultsFormDisplayed ? \"Cancel\" : \"Add results\"}\n      </Button>\n\n      {state.isResultsFormDisplayed && displayResultsForm()}\n        \n      <div className=\"all-exercises-container\">\n        {state.exerciseData === \"\" || state.exerciseData.results.length === 0\n          ? renderLoadInfo() \n          : displayChart() }\n      </div>\n\n      {ownerCheck()}\n    \n    </div>\n  )    \n}\n\nexport default DetailsWorkouts;","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/CreateExercise.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/AllExercises.js",["213"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport ExerciseService from '../../services/ExerciseService';\nimport CreateExercise from './CreateExercise';\n\nconst AllExercises = () => {\n\n    const [ state, setState ] = useState({\n        exercisesInfo: [],\n        isCreateFormDisplayed: false\n    });\n\n    const exerciseService = new ExerciseService();\n\n    useEffect(()=>{\n        getAllExercises();\n    }, []);\n\n    const getAllExercises = ()=>{\n        exerciseService.getAllExercises()\n        .then(resFromApi => {\n            setState({\n                ...state,\n                exercisesInfo: resFromApi\n            });\n        })\n        .catch(err => console.log(err))\n    };\n\n    const renderExercises = ()=>{\n        return state.exercisesInfo.map((element, index) => {\n            return(\n                <div key={index}>\n                    <Link to={`/details-exercise/${element._id}`}>\n                        <h4>{element.name}</h4>\n                    </Link>\n                </div>\n            )\n        });\n    };\n\n    const handleCreateForm = ()=>{\n        setState({\n            ...state,\n            isCreateFormDisplayed: !state.isCreateFormDisplayed\n        });\n    };\n\n\n    \n    return(\n        <div className=\"allExercises\">\n            <h2>All Exercises</h2>\n            <Button variant=\"info\" onClick={()=>{handleCreateForm()}}>\n                {state.isCreateFormDisplayed ? \"Cancel\" : \"Create exercise\"}\n            </Button>\n            \n            {state.isCreateFormDisplayed && <CreateExercise getAllExer={getAllExercises} handleCreateForm={handleCreateForm} />}\n            \n            <div>\n                {state.exercisesInfo.length > 0 && renderExercises()}\n            </div>\n        </div>\n    );\n    \n}\n\nexport default AllExercises;","/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/EditExercise.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/exercises_components/FormExerciseResults.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/ResultsService.js",["214"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/WorkoutService.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/CreateMetric.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/FormMetricMeasure.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/services/MeasureService.js",["215"],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/components/metrics_components/EditMetric.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authState.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authReducer.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/types/index.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/config/axios.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/auth/authContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/alerts/alertsContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/config/authToken.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsState.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseState.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsState.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureState.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/exercises/exerciseReducer.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/results/resultsReducer.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureReducer.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/measures/measureContext.js",[],"/Users/davidlqlb/Documents/Code/my-projects/Trackyfit-app-front/src/context/metrics/metricsReducer.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":22,"column":5,"nodeType":"222","endLine":22,"endColumn":33,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":21,"column":5,"nodeType":"222","endLine":21,"endColumn":33,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":13},{"ruleId":"226","severity":1,"message":"230","line":10,"column":11,"nodeType":"228","messageId":"229","endLine":10,"endColumn":24},{"ruleId":"220","severity":1,"message":"231","line":20,"column":6,"nodeType":"222","endLine":20,"endColumn":8,"suggestions":"232"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"233","line":24,"column":8,"nodeType":"222","endLine":24,"endColumn":10,"suggestions":"234"},{"ruleId":"220","severity":1,"message":"235","line":27,"column":6,"nodeType":"222","endLine":27,"endColumn":8,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"237","line":29,"column":6,"nodeType":"222","endLine":29,"endColumn":8,"suggestions":"238"},{"ruleId":"226","severity":1,"message":"239","line":104,"column":9,"nodeType":"228","messageId":"229","endLine":104,"endColumn":20},{"ruleId":"220","severity":1,"message":"240","line":18,"column":8,"nodeType":"222","endLine":18,"endColumn":10,"suggestions":"241"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.onSubmithistory' and 'showAlert'. Either include them or remove the dependency array.","ArrayExpression",["244"],"React Hook useEffect has missing dependencies: 'props.history' and 'showAlert'. Either include them or remove the dependency array.",["245"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'_loggedInUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userService'. Either include it or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'getAllWorkouts'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'fetchUser' and 'getMetricData'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'fetchUser' and 'getExerciseInfo'. Either include them or remove the dependency array.",["249"],"'renderChart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllExercises'. Either include it or remove the dependency array.",["250"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [isAuthenticated, message, props.onSubmithistory, showAlert]",{"range":"265","text":"266"},"Update the dependencies array to be: [isAuthenticated, message, props.history, showAlert]",{"range":"267","text":"268"},"Update the dependencies array to be: [userService]",{"range":"269","text":"270"},"Update the dependencies array to be: [getAllWorkouts]",{"range":"271","text":"272"},"Update the dependencies array to be: [fetchUser, getMetricData]",{"range":"273","text":"274"},"Update the dependencies array to be: [fetchUser, getExerciseInfo]",{"range":"275","text":"276"},"Update the dependencies array to be: [getAllExercises]",{"range":"277","text":"278"},[674,702],"[isAuthenticated, message, props.onSubmithistory, showAlert]",[624,652],"[isAuthenticated, message, props.history, showAlert]",[522,524],"[userService]",[711,713],"[getAllWorkouts]",[767,769],"[fetchUser, getMetricData]",[875,877],"[fetchUser, getExerciseInfo]",[497,499],"[getAllExercises]"]